#ifndef ZINTERCEPTION_H
#define ZINTERCEPTION_H

#include <QObject>
#include <QPointF>
#include <QVector>
#include <QTime>
#include <QDebug>
#include <qmath.h>

#include "../MapInterface/IMapClient.h"

typedef struct tt
{
    QPointF *point;
    double alt;
    double speed;
    double course;
    int state;
}tt;

/*!
    –ö–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞
*/
class ZInterception : public QObject
{
    Q_OBJECT
public:
    explicit ZInterception(IMapClient *client);
    ~ZInterception();

public:
    void set(int bla, int bpla, QByteArray per, QByteArray target);
    
signals:
    /*!
        –°–∏–≥–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ—á–∫–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞.
        \param aCoord - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞.
        \param aHgt - –≤—ã—Å–æ—Ç–∞ —Ç–æ—á–∫–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞.
        \param aRadius - —Ä–∞–¥–∏—É—Å –∑–æ–Ω—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞.
        \param aTime - –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
        \param aIntcCourse - –∫—É—Ä—Å, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∞.
        \param aIntcSpeed - —Å–∫–æ—Ä–æ—Å—Ç—å, –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∞.
    */
    void signal_sendInterceptionPoint(QPointF aCoord, float aHgt, float aRadius, int aTime, float aIntcCourse, float aIntcSpeed);
    void finished();

    void signalSet(int bla, int bpla, QByteArray per, QByteArray target);

private slots:
    void _slot_set(int bla, int bpla, QByteArray per, QByteArray target);
    
public slots:
    /*!
        –°–ª–æ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–µ.
        \param aCoordCurrentIntc - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∞.
        \param aHgtCurrentIntc - –≤—ã—Å–æ—Ç–∞ –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∞.
        \param aMaxSpd - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∞.
        \param aMaxHgtSpd - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–∞–±–æ—Ä–∞ –≤—ã—Å–æ—Ç—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∞.
    */
    void getIntcData(QPointF aCoordCurrentIntc, float aHgtCurrentIntc, float aMaxSpd, float aMaxHgtSpd);

    /*!
        –°–ª–æ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–µ.
        \param aCoordCurrentAim - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–ª–∏.
        \param aHgtCurrentAim - –≤—ã—Å–æ—Ç–∞ —Ü–µ–ª–∏.
        \param aSpdAim - —Å–∫–æ—Ä–æ—Å—Ç—å —Ü–µ–ª–∏.
        \param aCourseAim - –∫—É—Ä—Å —Ü–µ–ª–∏.
    */
    void getAimData(QPointF aCoordCurrentAim, float aHgtCurrentAim, float aSpdAim, float aCourseAim);

    /*!
        –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è.
        \param aDecartCoord - –¥–µ–∫–∞—Ä—Ç–æ–≤—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
        \param lGeogrCoord - cc—ã–ª–∫–∞ –Ω–∞ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
        \param aCentrCoord - –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ç–æ—á–∫–µ –≤ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö (0,0).
    */
    void mainProcessing();

private:
    /*!
        –ü–µ—Ä–µ–≤–æ–¥ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã (–¥–ª—è 1 —Ç–æ—á–∫–∏).
        \param aGeogrCoord - –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
        \param lDecartCoord - cc—ã–ª–∫–∞ –Ω–∞ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
        \param aCentrCoord - –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ —Ç–æ—á–∫–∏, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ç–æ—á–∫–µ –≤ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö (0,0).
    */
    void geogrToDecart(QPointF aGeogrCoord,QPointF &lDecartCoord, QPointF aCentrCoord);

    /*!
        –ü–µ—Ä–µ–≤–æ–¥ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ (–¥–ª—è 1 —Ç–æ—á–∫–∏).
        \param aDecartCoord - –¥–µ–∫–∞—Ä—Ç–æ–≤—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
        \param lGeogrCoord - cc—ã–ª–∫–∞ –Ω–∞ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
        \param aCentrCoord - –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ç–æ—á–∫–µ –≤ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö (0,0).
    */
    void decartToGeogr(QPointF aDecartCoord, QPointF &lGeogrCoord, QPointF aCentrCoord);

    //! – –∞—Å—á–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É 2–º—è —Ç–æ—á–∫–∞–º–∏ (–¥–µ–∫–∞—Ä—Ç.)
    float getDistance(QPointF aDecartCoordA, QPointF aDecartCoordB);

    /*!
            –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤–æ–≥–æ —É–≥–ª–∞ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ XY.
            \param aDecartCoord - –¥–µ–∫–∞—Ä—Ç–æ–≤—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
            \param aDecartCoordB - –¥–µ–∫–∞—Ä—Ç–æ–≤—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
            \param aSpeed - —Å–∫–æ—Ä–æ—Å—Ç—å.
            \param lXYSpeed - —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ XY.
            \param lAngle - —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫—É—Ä—Å–æ–≤–æ–π —É–≥–æ–ª.
    */
    void getAngle(QPointF aDecartCoordA, QPointF aDecartCoordB, float aSpeed, QPointF &lXYSpeed, float &lAngle);

    /*!
            –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ü–µ–ª–∏ –≤ —Å–ª–µ–¥. –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏.
            \param aDecartCoordAim - –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
            \param aAngle - –∫—É—Ä—Å–æ–≤–æ–π —É–≥–æ–ª.
            \param aSpeed - —Å–∫–æ—Ä–æ—Å—Ç—å.
            \param aTimeSec - –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
            \param lDecartCoord - —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–æ–≤—ã–µ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
    */
    void getNextCoord(QPointF aDecartCoordAim, float aAngle, float aSpeed, int aTimeSec, QPointF &lDecartCoord);




private:
    //! –î–∞–Ω–Ω—ã–µ –æ –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–µ
    QPointF mCoordCurrentIntc;      //–¢–µ–∫—É—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    float mHgtCurrentIntc;          //–¢–µ–∫—É—â–∞—è –≤—ã—Å–æ—Ç–∞
    float mMaxSpd;                    //–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
    float mCurrentSpd;              //–¢–µ–∫—É—â–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
    float mMaxHgtSpd;                 //–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–∞–±–æ—Ä–∞ –≤—ã—Å–æ—Ç—ã
    float mCurrentCourse;           //–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å

    //! –î–∞–Ω–Ω—ã–µ –æ —Ü–µ–ª–∏
    QPointF mCoordCurrentAim;
    float mHgtCurrentAim;
    float mCurrentAimSpd;
    float mCurrentAimCourse;

    IMapClient*     _client;

    int _bla;
    int _bpla;
    
};

#endif // ZINTERCEPTION_H
